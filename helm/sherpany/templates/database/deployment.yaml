apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.system.name }}-db"
  labels:
    app: "{{ .Values.system.name }}-db"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.system.name }}-db"
  template:
    metadata:
      labels:
        app: "{{ .Values.system.name }}-db"
    spec:
      containers:
        - name: db
          image: "{{ .Values.db.image }}"
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.system.db.user }}"
            - name: POSTGRES_USER
              value: "{{ .Values.system.db.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.system.name }}-secrets"
                  key: postgres-password
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data/
          ports:
            - name: db
              containerPort: 
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.system.db.user }}"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.system.db.user }}"
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: "{{ .Values.system.name }}-db-pvc"
