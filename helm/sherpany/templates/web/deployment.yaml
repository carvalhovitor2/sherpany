apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "{{ .Values.system.name }}"
  name: "{{ .Values.system.name }}-web"
  labels:
    app: "{{ .Values.system.name }}-web"
spec:
  replicas: {{ .Values.system.web.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.system.name }}-web"
  template:
    metadata:
      labels:
        app: "{{ .Values.system.name }}-web"
    spec:
      containers:
      - name: web
        image: "{{ .Values.system.web.image }}"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - python manage.py makemigrations &&
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          python manage.py loaddata fixtures/initial_data.json &&
          uwsgi --ini uwsgi.ini
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.system.name }}-secrets"
              key: secret-key
        
        - name: POSTGRES_USER
          value: "{{ .Values.system.db.user }}"

        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.system.name }}-secrets"
              key: postgres-password
       
        - name: POSTGRES_DB
          value: "{{ .Values.system.db.database }}"

        - name: POSTGRES_HOST
          value: "{{ .Values.system.db.host }}"

        - name: POSTGRES_PORT
          value: "{{ .Values.system.db.port }}"          
        ports:
        - containerPort: {{ .Values.system.web.port }}
        volumeMounts:
        - name: static-volume
          mountPath: /code/static
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: "{{ .Values.system.name }}-web-pvc"
